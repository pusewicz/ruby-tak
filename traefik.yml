## STATIC CONFIG (restart traefik to update)

# shows you a log msg if a newer image tag can be used
global:
  checkNewVersion: true

# log default is ERROR, but WARN is more helpful
log:
  level: WARN
  # level: INFO

# enable dashboard on 8080 with NO AUTH
api:
  insecure: true
  dashboard: true

# enable ping so the `traefik healthcheck` works
ping: {}

# auto-proxy containers if they have proper labels
# and also use this file for dynamic config (tls)
providers:
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
    watch: true
  file:
    directory: "/etc/traefik"
    watch: true

# listen on 80/443, and redirect all 80 to 443 via 301
entryPoints:
  http:
    address: ":80"
    http:
      redirections:
        entryPoint:
          to: https
          scheme: https
  https:
    address: ":443"
  rubytak:
    address: ":8089"

## DYNAMIC CONFIG

#####################################
#
# https://github.com/Heziode/traefik-v2-https-ssl-localhost/

http:
  routers:
    traefik:
      rule: "Host(`traefik.docker.localhost`)"
      service: "api@internal"
      tls:
        domains:
          - main: "docker.localhost"
            sans:
              - "*.docker.localhost"
          - main: "domain.local"
            sans:
              - "*.domain.local"

tls:
  certificates:
    - certFile: "/etc/certs/server.crt"
      keyFile: "/etc/certs/server.key"
  stores:
    default:
      defaultCertificate:
        certFile: /etc/certs/server.crt
        keyFile: /etc/certs/server.key
# when troubleshooting certs, enable this so traefik doesn't use
# its own self-signed. By default if it can't find a matching
# cert, it'll just create its own which will cause cert warnings
# in browser and can be confusing to troubleshoot
  # options:
    # default:
      # sniStrict: true
